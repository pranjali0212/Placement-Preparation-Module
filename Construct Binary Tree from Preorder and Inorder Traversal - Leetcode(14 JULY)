class Solution {
public:
    TreeNode* build(vector<int>& preorder,int ps,int pe,vector<int>& inorder,int is,int ie,map<int,int> &m){
        if(ps>pe || is>ie){
            return NULL;
        }
        TreeNode* root=new TreeNode(preorder[ps]);
        int inroot=m[root->val];
        int left=inroot-is;
        root->left=build(preorder,ps+1,ps+left,inorder,is,inroot-1,m);
        root->right=build(preorder,ps+left+1,pe,inorder,inroot+1,ie,m);
        return root;
    }
    TreeNode* buildTree(vector<int>& preorder, vector<int>& inorder) {
        map<int,int>m;
        for(int i=0;i<inorder.size();i++){
            m[inorder[i]]=i;
        }
        TreeNode* root=build(preorder,0,preorder.size()-1,inorder,0,inorder.size()-1,m);
        return root;
    }
};
